{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://global/lib/global.service.ts","ng://global/lib/global.component.ts","ng://global/lib/component/modal-notification/modal-notification.ts","ng://global/lib/component/page-not-found/page-not-found.component.ts","ng://global/lib/component/page-not-found/page-not-found.component.html","ng://global/lib/component/panel/asset-data-panel/asset-data-panel.component.html","ng://global/lib/component/panel/asset-data-panel/asset-data-panel.component.ts","ng://global/lib/component/panel/panel-blank/panel-blank.component.html","ng://global/lib/component/panel/panel-blank/panel-blank.component.ts","ng://global/lib/component/panel/panel-dashboard/panel-dashboard.component.html","ng://global/lib/component/panel/panel-dashboard/panel-dashboard.component.ts","ng://global/lib/component/panel/panel-remove/panel-remove.component.html","ng://global/lib/component/panel/panel-remove/panel-remove.component.ts","ng://global/lib/exportTable.ts","ng://global/lib/component/panel/table-panel/table-panel.component.html","ng://global/lib/component/panel/table-panel/table-panel.component.ts","ng://global/lib/directive/number-validate/numbers-only.directive.ts","ng://global/lib/directive/scroll-bar/scroll-bar.interfaces.ts","ng://global/lib/directive/scroll-bar/scroll-bar.directive.ts","ng://global/lib/pipe/hypen/hyphen.pipe.ts","ng://global/lib/common/generic-export.ts","ng://global/lib/global.module.ts","ng://global/lib/model/ErrorData.ts","ng://global/lib/model/Response.ts","ng://global/lib/model/timeZone.ts","ng://global/lib/services/AutoLogout/auto-logout.service.ts","ng://global/lib/services/dialog/dialog.service.ts","ng://global/lib/services/excel/excel.service.ts","ng://global/lib/services/pdf/pdf.service.ts","ng://global/lib/services/global/globalSharedService.ts","ng://global/lib/services/guard/guard.service.ts","ng://global/lib/services/shared/shareddata.service.ts","ng://global/lib/services/theme/theme-change.service.ts","ng://global/lib/services/version-check/version-check.service.ts"],"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","__makeTemplateObject","cooked","raw","Object","defineProperty","GlobalService","factory","ɵfac","providedIn","GlobalComponent","prototype","ngOnInit","selectors","decls","vars","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","UIModalNotificationPage","modalService","this","inputField","modelNotificationInfo","EventEmitter","modelNotificationSuccess","modelNotificationWarning","modelNotificationWarningAlarm","modelNotificationDanger","modelNotificationError","modelNotificationAlarmMessage","modelNotificationClearMessage","open","content","_this","result","then","closeResult","reason","getDismissReason","ModalDismissReasons","ESC","BACKDROP_CLICK","alertMessage","messageType","message","swalSuccess","status","swalErrorInfo","swalInfo","swalWarning","swalDanger","swalAlarmMessage","swalClearMessage","Swal","fire","title","text","icon","showCancelButton","confirmButtonText","showCloseButton","allowOutsideClick","customClass","confirmButton","emit","cancelButtonText","reverseButtons","container","swalWarningAlarm","html","remark","document","getElementById","allowEnterKey","helpMessage","swalHelp","position","showConfirmButton","focusConfirm","core","ɵɵdirectiveInject","ngBootstrap","NgbModal","outputs","encapsulation","PageNotFoundComponent","consts","i0.ɵɵprojection","i0.ɵɵlistener","i0.ɵɵelement","i0.ɵɵi18n","i0.ɵɵadvance","i0.ɵɵpropertyInterpolate","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵproperty","ɵɵpureFunction1","_c9","ctx_r34","footerClass","AssetDataPanelComponent","cdr","screenStatus","expand","reload","remove","showFooter","removeLineChart","ngAfterViewInit","setTimeout","panelFooter","nativeElement","children","ClicktoMaximize","innerText","detectChanges","panelExpand","ClicktoMinimize","panelRemove","id","ChangeDetectorRef","viewQuery","_c2$1","ctx_r44","PanelBlankComponent","collapse","panelReload","panelCollapse","modelNotification","openFormModel","test","alert","lineWidgetForm","windowClass","backdrop","DOCUMENT","_c3$1","ctx_r46","PanelDashboardComponent","confirm","_c3$2","ctx_r51","PanelRemoveComponent","exportTable","exportToExcel","tableId","name","prefix","fileName","Date","toISOString","split","targetTableElm","wb","XLSX.utils","table_to_book","sheet","XLSX.writeFile","i0.ɵɵi18nAttributes","_c12","ctx_r57","TablePanelComponent","router","render","elRef","scrollBarDirective","clickToAddNew","eventEmitToPageNaviagte","panelExpandCollapse","refreshTableList","addNew","pageName","navigate","searchButton","dataSource","inpputSearchBoxElement","style","display","setTableDasourceAsDefault","searchButtonPanel","undefined","applyFilter","filterValue","filter","trim","toLowerCase","tableName","Router","Renderer2","ElementRef","NumberDirective","_el","onInputChange","event","initalValue","replace","stopPropagation","hostBindings","PERFECT_SCROLLBAR_CONFIG","InjectionToken","x","y","w","h","PerfectScrollbarEvents","PerfectScrollbarConfig","config","assign","key","ScrollbarDirective","zone","differs","elementRef","platformId","defaults","el","instance","ro","timeout","animation","configDiff","ngDestroy","Subject","disabled","psScrollY","psScrollX","psScrollUp","psScrollDown","psScrollLeft","psScrollRight","psYReachEnd","psYReachStart","psXReachEnd","psXReachStart","isPlatformBrowser","config_1","runOutsideAngular","PerfectScrollbar","find","create","diff","ResizeObserver","update","observe","forEach","eventName","eventType","c","fromEvent","pipe","auditTime","takeUntil","subscribe","ngOnDestroy","complete","disconnect","window","clearTimeout","destroy","ngDoCheck","ngOnChanges","changes","isFirstChange","currentValue","previousValue","ps","geometry","Geometry","absolute","Position","reach","scrollLeft","scrollTop","scrollable","direction","element","classList","contains","scrollTo","speed","animateScrolling","scrollToX","scrollToY","scrollToTop","offset","scrollToLeft","scrollToRight","left","scrollWidth","clientWidth","scrollToBottom","top","scrollHeight","clientHeight","scrollToElement","qs","querySelector","elementPos","getBoundingClientRect","scrollerPos","currentPos","target","cancelAnimationFrame","newValue_1","scrollCount_1","oldTimestamp_1","performance","now","oldValue_1","cosParameter_1","step_1","newTimestamp","Math","PI","round","cos","requestAnimationFrame","onClick","$","hasClass","scrollPositionToTop","NgZone","KeyValueDiffers","PLATFORM_ID","HyphenPipe","transform","pure","syncDropdownNoRecordsFoundLocale","L10n","load","hi","dropdowns","noRecordsTemplate","dropdowntree","matRangeLabelIntl","page","pageSize","$localize","templateObject_1$2","startIndex","endIndex","max","min","templateObject_2$2","MyPaginatorIntl","paginatorIntl","MatPaginatorIntl","itemsPerPageLabel","templateObject_3$1","nextPageLabel","templateObject_4","previousPageLabel","templateObject_5","lastPageLabel","templateObject_6","firstPageLabel","templateObject_7","getRangeLabel","GlobalModule","providers","provide","useValue","imports","CommonModule","MatTooltipModule","declarations","exports","AutoLogoutService","getLastAction","parseInt","localStorage","getItem","setLastAction","lastAction","setItem","toString","clearInterval","inter","initListener","body","addEventListener","reset","initInterval","setInterval","check","getSignOnHistoryByUserId","userId","sessionStorage","isTimeout","MINUTES_UNITL_AUTO_LOGOUT","currentSigOnTime","logout","clear","ɵɵinject","DialogService","navigateAwaySelection$","Promise","resolve","ExcelService","generateExcel","excelObject","excelSearchFilterFields","workbook","Workbook","worksheet","addWorksheet","excelWorkSheetName","pageSetup","paperSize","orientation","properties","defaultColWidth","excelWorkSheetTitle","addRow","font","family","size","underline","bold","alignment","horizontal","vertical","mergeCells","searchFilterKeysValues","searchCriteriaText","d","eachCell","cell","number","tableHeaderNames","fill","type","pattern","fgColor","argb","border","bottom","right","tableBodyData","excelFooterRow","getCell","xlsx","writeBuffer","data","blob","Blob","fs.saveAs","PdfService","generatePDF","pdfObject","pdfSearchFilterFields","head","pdfTableBodyData","doc","jsPDF","setFontSize","pdfSearchFilterFieldsData","autoTable","theme","styles","cellWidth","bodyStyles","fontSize","headStyles","startY","didParseCell","column","index","fontStyle","minWidth","overflow","lineWidth","lineColor","section","fillColor","textColor","finalY","lastAutoTable","save","globalSharedService","excelService","pdfService","selectedId","tabClick","urlName","assetViewModeFormViewStatus","responseStatus","messageType_Fail","messageType_Info","messageType_Warning","messageType_Error","messageType_AlarmMessage","messageType_ClearMessage","selectedDashboardName","setData","setassetViewModeFormViewStatus","view","GettingId","GettingString","setId","gettingName","parentName","setOrganizationDetail","objectDetail","listOfRow","setMenuDetail","menu","analogAsset","analogAssetObj","listOfRowDetailForUser","url","tab","header","userDetails","clearInfo","removeClass","getNamePattern","getNamePatternForGatewayandAsset","setIsAdmin","isAdmin","isadmin","doubleHyphen","includes","landingMenuUrl","landingMenuUrlForHome","setNumberOfUsers","numberOfUsers","maxUser","setRoleList","confirmedList","roleList","setAssetDetail","details","assetDetails","setGlobalId","globalId","setNotificationMedia","notificationMediaList","setConfirmedNotificationGroupList","confirmedNotificationGroupList","setConfirmedAccessGroupList","confirmedAccessGroupList","setUsersList","usersList","setNotificationGroupDetails","notificationGroupDetails","setNotificationMediaTabDetails","notificationMediaTabDetails","setNotificationGroupmediaDetails","notificationGroupmediaDetails","setBackId","object","backId","dataDataSource","setNotificationDetail","obj","onpageloadNotificationGroupMediaDetails","getDashboardSelectedName","userDashboardList","item","isDefault","getPatternForCommunication","dataType","getPatternForDiscreterTag","setLanguageURL","pageUrl","currentPageUrl","pathName","location","protocol","host","getCurrentUrl","each","attr","anchorTagAttrbute","path","href","setReminingUsers","reminingUsers","reminingUser","setMaxUsers","maxUsers","setDataServerTime","dataServerTime","getExportingFileName","exportingfileName","getFullDay","getTime","getHrMin","startDateEndDateTimeSplit","dateTime","reCreateNewObject","displayedColumns","map","newObject","displayedColumns_1","displayedColumns_1_1","objPropertyName","hasOwnProperty","formateCSVTitle","titleList","headerName","headerTitle","titleRowKeys","_b","entries","_c","_d","slice","downloadFile","fileType","exportFile","searchFieldsContainer","tableBodyDataList","csvOptions","AngularCsv","removeLastIndexAtArray","array","values","pop","serialNumberGenerate","setUserEmailId","emailId","getLanguage","selectedLanguage","setLanguage","language","setMultiselectDropdownTextSettings","dropDownTextSettings","templateObject_1$3","noDataLabel","templateObject_2$3","setGatewayLableName","setDataValue","getDataValue","PendingChangesGuard","canDeactivate","component","ShareddataService","messageSource","subject","categorySubject","rackAssetSubject","changeMessage","getChangedMessage","asObservable","getData","setCategory","getCategory","setRackAsset","getRackAsset","ThemeChangeService","http","getThemeNames","HttpClient","VersionCheckService","currentHash","initVersionCheck","frequency","checkVersion","get","response","hash","hasHashChanged","err","console","newHash"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-global',\r\n  template: `\r\n    <p>\r\n      global works!\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class GlobalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport $ from 'jquery';\r\n\r\n// ES6 Modules or TypeScript\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-modal-notification',\r\n  templateUrl: './modal-notification.html'\r\n})\r\n\r\nexport class UIModalNotificationPage {\r\n  closeResult: string;\r\n  inputField = false;\r\n  remark: any;\r\n\r\n  constructor(private modalService: NgbModal) {\r\n\r\n  }\r\n\r\n  open(content) {\r\n    this.modalService.open(content).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n  // Handling response comes from API\r\n  alertMessage(messageType, message) {\r\n    switch (messageType) {\r\n      case 'Success': {\r\n        // Modal window for success (ex:Created successful , Deleted successful)\r\n        this.swalSuccess(message);\r\n        break;\r\n      }\r\n      case 'Failed': {\r\n        let error;\r\n        // Modal window for failed scenario(ex: Not saved)\r\n        if (message.status === 401) {\r\n          error = message.error.message\r\n        }\r\n        else if (message.status === 0) {\r\n          error = \"Not able to process request, Please try after some time.\"\r\n        }\r\n        else {\r\n          error = message;\r\n        }\r\n        this.swalErrorInfo(error);\r\n        break;\r\n      }\r\n      case 'Info': {\r\n        // Information\r\n        this.swalInfo(message);\r\n        break;\r\n      }\r\n      case 'Warning': {\r\n        // Modal window for Warning info (ex: Cancel/Reset/Tab navigation)\r\n        this.swalWarning(message);\r\n        break;\r\n      }\r\n      case 'Error': {\r\n        // Modal window for delete\r\n        this.swalDanger(message);\r\n        break;\r\n      }\r\n      case 'AlarmMessage': {\r\n        // Modal window for delete\r\n        this.swalAlarmMessage(message);\r\n        break;\r\n      }\r\n      case 'ClearMessage': {\r\n        // Modal window for delete\r\n        this.swalClearMessage(message);\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // ex(login = just information with question)\r\n  // swalPrimary(title, text) {\r\n  //   swal({\r\n  //     title: title,\r\n  //     text: text,\r\n  //     type: 'question',\r\n  //     showCancelButton: true,\r\n  //     confirmButtonText: 'Ok',\r\n  //     showCloseButton: true,\r\n  //     allowOutsideClick: true,\r\n  //     confirmButtonClass: 'btn btn-success'\r\n  //   }).then((result) => {\r\n  //     if (result.value) {\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n\r\n\r\n\r\n  // Information\r\n  @Output() modelNotificationInfo = new EventEmitter();\r\n  swalInfo(message) {\r\n    Swal.fire({\r\n      title: \"Information\",\r\n      text: message,\r\n      icon: 'info',\r\n      showCancelButton: false,\r\n      confirmButtonText: 'Ok',\r\n      showCloseButton: true,\r\n      allowOutsideClick: true,\r\n      customClass: {\r\n        confirmButton: 'btn btn-success',\r\n        // cancelButton: 'btn btn-danger'\r\n      }\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.modelNotificationInfo.emit();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // Modal window for success (ex:Created successful/Deleted successful)\r\n  @Output() modelNotificationSuccess = new EventEmitter();\r\n  swalSuccess(message) {\r\n    Swal.fire({\r\n      title: 'Successful!',\r\n      text: message,\r\n      icon: 'success',\r\n      showCancelButton: false,\r\n      confirmButtonText: 'Ok',\r\n      showCloseButton: false,\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.modelNotificationSuccess.emit();\r\n      }\r\n    })\r\n  }\r\n\r\n  // Modal window for Warning info (ex: Cancel/Reset/Tab navigation)\r\n  @Output() modelNotificationWarning = new EventEmitter();\r\n  swalWarning(message) {\r\n    Swal.fire({\r\n      title: 'Warning!',\r\n      text: message,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Ok',\r\n      cancelButtonText: 'Cancel',\r\n      reverseButtons: true,\r\n      showCloseButton: true,\r\n      customClass: {\r\n        confirmButton: 'btn btn-warning',\r\n        container: 'warning_info',\r\n      },\r\n      // customClass: 'warning_info'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.modelNotificationWarning.emit();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // Modal window for Warning info (ex: Cancel/Reset/Tab navigation)\r\n  @Output() modelNotificationWarningAlarm = new EventEmitter();\r\n  swalWarningAlarm(message) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      html: message + ''\r\n        + '<br /><textarea *ngIf=\"inputField\" #remark style=\"height:50px!important\" id=\"remark\" class=\"form-control m-input col-md-8 mt-2 mx-auto\" type=\"text\" name=\"remark\" placeholder=\"Enter Remark\"></textarea>',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Ok',\r\n      cancelButtonText: 'Cancel',\r\n      reverseButtons: true,\r\n      showCloseButton: true,\r\n      customClass: {\r\n        confirmButton: 'btn btn-warning',\r\n        container: 'warning_info',\r\n      },\r\n      // customClass: 'warning_info'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (this.inputField) {\r\n          this.remark = document.getElementById('remark')['value'];\r\n          this.modelNotificationWarningAlarm.emit(this.remark);\r\n        } else this.modelNotificationWarningAlarm.emit();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // Modal window for delete\r\n  @Output() modelNotificationDanger = new EventEmitter();\r\n  swalDanger(message) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: message,\r\n      icon: 'error',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Ok',\r\n      cancelButtonText: 'Cancel',\r\n      reverseButtons: true,\r\n      showCloseButton: true,\r\n      customClass: {\r\n        confirmButton: 'btn btn-danger',\r\n        // cancelButton: 'btn btn-danger'\r\n      }\r\n      // confirmButtonClass: 'btn btn-danger'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.modelNotificationDanger.emit();\r\n      }\r\n    })\r\n  }\r\n\r\n  // Modal window for failed scenario(ex: Not saved)\r\n  @Output() modelNotificationError = new EventEmitter();\r\n  swalErrorInfo(message) {\r\n    Swal.fire({\r\n      title: \"Failed!\",\r\n      text: message,\r\n      icon: 'info',\r\n      showCancelButton: false,\r\n      confirmButtonText: 'Ok',\r\n      showCloseButton: false,\r\n      // confirmButtonClass: 'btn btn-danger',\r\n      customClass: {\r\n        confirmButton: 'btn btn-danger',\r\n        container: 'error_info'\r\n      }\r\n      // customClass: 'error_info'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.modelNotificationError.emit();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // Modal window for help (ex: Format of alarm message)\r\n  @Output() modelNotificationAlarmMessage = new EventEmitter();\r\n  swalAlarmMessage(message) {\r\n    Swal.fire({\r\n      title: 'Alarm Message Format!',\r\n      html: message,\r\n      showCancelButton: false,\r\n      showCloseButton: true,\r\n      allowOutsideClick: true,\r\n      allowEnterKey: true,\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.modelNotificationAlarmMessage.emit();\r\n      }\r\n    })\r\n  }\r\n\r\n  // Modal window for help (ex: Format of alarm message)\r\n  @Output() modelNotificationClearMessage = new EventEmitter();\r\n  swalClearMessage(message) {\r\n    Swal.fire({\r\n      title: 'Clear Message Format!',\r\n      html: message,\r\n      showCancelButton: false,\r\n      showCloseButton: true,\r\n      allowOutsideClick: true,\r\n      allowEnterKey: true,\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.modelNotificationAlarmMessage.emit();\r\n      }\r\n    })\r\n  }\r\n\r\n  helpMessage(message) {\r\n    this.swalHelp(message);\r\n  }\r\n\r\n  swalHelp(message) {\r\n    Swal.fire({\r\n      position: 'top-end',\r\n      showConfirmButton: false,\r\n      //timer: 5000,\r\n      // title: \"Information\",\r\n      html: message,\r\n      //icon: 'info',\r\n      showCloseButton: true,\r\n      showCancelButton: false,\r\n      focusConfirm: false,\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.modelNotificationInfo.emit();\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"pageNotFound\">\r\n            <h1>404</h1>\r\n            <p>Oops! Something is wrong.</p>\r\n        </div>\r\n        \r\n    </div>\r\n</div>","<!-- begin panel -->\r\n<div class=\"panel panel-inverse\"\r\n  [ngClass]=\"[ (this.expand) ? 'panel-expand': '', (this.reload) ? 'panel-loading': '', (this.panelClass) ? this.panelClass : '', (this.variant) ? 'panel-' + this.variant : 'panel-inverse' ]\"\r\n  *ngIf=\"!this.remove\">\r\n  <!-- begin panel-heading -->\r\n  <div class=\"panel-heading\">\r\n    <div class=\"panel-heading-btn\" *ngIf=\"!this.noButton\">\r\n      <ng-content select=\"[download]\"></ng-content>\r\n\r\n      <a href=\"javascript:;\" class=\"btn btn-xs btn-icon btn-circle btn-default panel-expand\" (click)=\"panelExpand()\"\r\n        matTooltip=\"{{screenStatus}}\"><i class=\"fa fa-expand\"></i></a>\r\n        \r\n      <ng-content select=\"[refresh]\"></ng-content>\r\n      <!-- <a href=\"javascript:;\" class=\"btn btn-xs btn-icon btn-circle btn-success\" (click)=\"panelReload()\" title=\"click to refresh\"><i class=\"fa fa-redo\"></i></a> -->\r\n      <ng-content select=\"[remove]\"></ng-content>\r\n\r\n      <template #ClicktoMaximize i18n='Tooltip|Click to Maximize@@clickToMaximize'>Click to Maximize\r\n      </template>\r\n      <template #ClicktoMinimize i18n='Tooltip|Click to Minimize@@clickToMinimize'>Click to Minimize\r\n      </template>\r\n\r\n    </div>\r\n    <h4 class=\"panel-title\" *ngIf=\"this.title\">{{title}}</h4>\r\n    <ng-content select=\"[header]\"></ng-content>\r\n  </div>\r\n  <!-- end panel-heading -->\r\n\r\n  <!-- begin before-body -->\r\n  <ng-content select=\"[beforeBody]\"></ng-content>\r\n  <!-- end before-body -->\r\n\r\n  <!-- begin panel-body -->\r\n  <div class=\"panel-body\" [ngClass]=\"[ (this.collapse) ? 'd-none': '', (this.bodyClass) ? this.bodyClass : '' ]\"\r\n    *ngIf=\"!this.noBody\" style=\"border:0.5px solid #000000;padding:0px;\">\r\n    <ng-content></ng-content>\r\n    <div class=\"panel-loader\" *ngIf=\"this.reload\"><span class=\"spinner-small\"></span></div>\r\n  </div>\r\n  <!-- end panel-body -->\r\n\r\n  <!-- begin no-body -->\r\n  <ng-content select=\"[noBody]\"></ng-content>\r\n  <!-- end no-body -->\r\n\r\n  <!-- begin outside-body -->\r\n  <ng-content select=\"[outsideBody]\"></ng-content>\r\n  <!-- end outside-body -->\r\n\r\n  <!-- begin panel-footer -->\r\n  <div class=\"panel-footer\" #panelFooter [hidden]=\"!showFooter\"\r\n    [ngClass]=\"[ (this.footerClass) ? this.footerClass : '' ]\">\r\n    <ng-content select=\"[footer]\"></ng-content>\r\n  </div>\r\n  <!-- end panel-footer -->\r\n\r\n  <!-- begin after-footer -->\r\n  <ng-content select=\"[afterFooter]\"></ng-content>\r\n  <!-- end after-footer -->\r\n</div>\r\n<!-- end panel -->","import { Component, OnInit, ViewChild, Output, EventEmitter, ElementRef, ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-asset-data-panel',\r\n  inputs: ['title', 'variant', 'noBody', 'noButton', 'bodyClass', 'footerClass', 'panelClass'],\r\n  templateUrl: './asset-data-panel.component.html',\r\n  styleUrls: ['./asset-data-panel.component.css']\r\n})\r\nexport class AssetDataPanelComponent implements OnInit {\r\n  screenStatus: string = \"\";\r\n  title:string;\r\n  variant:boolean;\r\n  noBody:boolean;\r\n  noButton:boolean;\r\n  bodyClass:boolean;\r\n  footerClass:boolean;\r\n  panelClass:boolean;\r\n  collapse:boolean;\r\n  @ViewChild('panelFooter') panelFooter;\r\n  expand = false;\r\n  reload = false;\r\n  remove = false;\r\n  showFooter = false;\r\n  @ViewChild(\"ClicktoMaximize\") ClicktoMaximize: ElementRef;\r\n  @ViewChild(\"ClicktoMinimize\") ClicktoMinimize: ElementRef;\r\n  constructor(private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.showFooter = this.panelFooter.nativeElement && this.panelFooter.nativeElement.children.length > 0;\r\n    });\r\n    this.screenStatus = this.ClicktoMaximize.nativeElement.innerText;\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  panelExpand() {\r\n    this.expand = !this.expand;\r\n    if (this.expand) {\r\n      //  this.screenStatus = \"Click to Minimize\";\r\n      this.screenStatus = this.ClicktoMinimize.nativeElement.innerText;\r\n    } else {\r\n      // this.screenStatus = \"Click to Maximize\";\r\n      this.screenStatus = this.ClicktoMaximize.nativeElement.innerText;\r\n    }\r\n  }\r\n\r\n  @Output() removeLineChart = new EventEmitter<string>();\r\n  panelRemove(id) {\r\n    this.removeLineChart.emit();\r\n    setTimeout(() => {\r\n      this.reload = false;\r\n    }, 1500);\r\n  }\r\n\r\n\r\n}\r\n","<!-- begin panel -->\r\n\r\n\r\n<div class=\"panel panel-inverse\"  [ngClass]=\"[ (this.expand) ? 'panel-expand': '', (this.reload) ? 'panel-loading': '', (this.panelClass) ? this.panelClass : '', (this.variant) ? 'panel-' + this.variant : 'panel-inverse' ]\" *ngIf=\"!this.remove\">\r\n    \r\n  \r\n  \r\n    <!-- begin panel-body -->\r\n    <div class=\"panel-body\"  style=\"width: 100%;\" >\r\n      <ng-content>\r\n      </ng-content>\r\n    </div>\r\n    <!-- end panel-body -->\r\n  \r\n    <!-- begin no-body -->\r\n    <ng-content select=\"[noBody]\"></ng-content>\r\n    <!-- end no-body -->\r\n  \r\n    <!-- begin outside-body -->\r\n    <ng-content select=\"[outsideBody]\"></ng-content>\r\n    <!-- end outside-body -->\r\n  \r\n    <!-- begin panel-footer -->\r\n    <div class=\"panel-footer\" #panelFooter [hidden]=\"!showFooter\" [ngClass]=\"[ (this.footerClass) ? this.footerClass : '' ]\">\r\n      <ng-content select=\"[footer]\"></ng-content>\r\n    </div>\r\n    <!-- end panel-footer -->\r\n  \r\n    <!-- begin after-footer -->\r\n    <ng-content select=\"[afterFooter]\"></ng-content>\r\n    <!-- end after-footer -->\r\n  </div>\r\n  <!-- end panel -->\r\n  <app-modal-notification></app-modal-notification>","import { DOCUMENT } from '@angular/common';\r\nimport { AfterViewInit, Component, Inject, ViewChild } from '@angular/core';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UIModalNotificationPage } from '../../modal-notification/modal-notification';\r\n@Component({\r\n  selector: 'app-panel-blank',\r\n  templateUrl: './panel-blank.component.html',\r\n  styleUrls: ['./panel-blank.component.css']\r\n})\r\nexport class PanelBlankComponent implements AfterViewInit {\r\n  @ViewChild('panelFooter') panelFooter;\r\n  @ViewChild(UIModalNotificationPage) modelNotification;\r\n  variant:boolean;\r\n  noBody:boolean;\r\n  noButton:boolean;\r\n  bodyClass:boolean;\r\n  footerClass:boolean;\r\n  panelClass:boolean;\r\n  expand = false;\r\n  reload = false;\r\n  collapse = false;\r\n  remove = false;\r\n  closeResult: string;\r\n  showFooter = false;\r\n  lineWidgetForm: boolean;\r\n  constructor( private modalService: NgbModal, @Inject(DOCUMENT) document: any) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.showFooter = this.panelFooter.nativeElement && this.panelFooter.nativeElement.children.length > 0;\r\n    });\r\n  }\r\n\r\n  panelExpand() {\r\n    this.expand = !this.expand;\r\n  }\r\n  panelReload() {\r\n    this.reload = true;\r\n\r\n    setTimeout(() => {\r\n        this.reload = false;\r\n    }, 1500);\r\n  }\r\n  panelCollapse() {\r\n    this.collapse = !this.collapse;\r\n  }\r\n  panelRemove() {\r\n    \r\n    this.modelNotification.swalDanger('Are you sure?', 'You will not be able to recover this Widget!');\r\n    \r\n    this.remove = !this.remove;\r\n  }\r\n\r\n  openFormModel(content,test:string) {\r\n    alert(test);\r\n\r\n    this.lineWidgetForm=true;\r\n    this.modalService.open(content, \r\n      {\r\n          windowClass: 'custom-class',\r\n          backdrop:'static'\r\n      }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n     \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n    \r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","<!-- begin panel -->\r\n<div\r\n  class=\"panel panel-inverse h-100\"\r\n  [ngClass]=\"[\r\n    this.expand ? 'panel-expand' : '',\r\n    this.reload ? 'panel-loading' : '',\r\n    this.panelClass ? this.panelClass : '',\r\n    this.variant ? 'panel-' + this.variant : 'panel-inverse'\r\n  ]\"\r\n  *ngIf=\"!this.remove\"\r\n>\r\n  <!-- begin panel-heading -->\r\n  <div class=\"panel-heading\">\r\n    <div class=\"panel-heading-btn\" *ngIf=\"!this.noButton\">\r\n      <ng-content select=\"[download]\"></ng-content>\r\n      <!-- <a href=\"javascript:;\" class=\"btn btn-xs btn-icon btn-circle btn-default\" (click)=\"panelExpand()\" title=\"click to expand\"><i class=\"fa fa-expand\"></i></a> -->\r\n      <ng-content select=\"[expand]\"></ng-content>\r\n      <ng-content select=\"[refresh]\"></ng-content>\r\n      <ng-content select=\"[downloadButton]\"></ng-content>\r\n      <ng-content select=\"[tablePanelPaginator]\"></ng-content>\r\n      <!-- <a href=\"javascript:;\" class=\"btn btn-xs btn-icon btn-circle btn-success\" (click)=\"panelReload()\" title=\"click to refresh\"><i class=\"fa fa-redo\"></i></a> -->\r\n      <!-- <a href=\"javascript:;\" class=\"btn btn-xs btn-icon btn-circle btn-danger\" (click)=\"panelRemove()\" title=\"click to remove from canvas\"><i class=\"fa fa-times\"></i></a> -->\r\n    </div>\r\n    <h4 class=\"panel-title\" *ngIf=\"this.title\">{{ title }}</h4>\r\n    <ng-content select=\"[header]\"></ng-content>\r\n  </div>\r\n  <!-- end panel-heading -->\r\n\r\n  <!-- begin before-body -->\r\n  <ng-content select=\"[beforeBody]\"></ng-content>\r\n  <!-- end before-body -->\r\n\r\n  <!-- begin panel-body -->\r\n  <div\r\n    class=\"panel-body\"\r\n    [ngClass]=\"[\r\n      this.collapse ? 'd-none' : '',\r\n      this.bodyClass ? this.bodyClass : ''\r\n    ]\"\r\n    *ngIf=\"!this.noBody\"\r\n    style=\"padding: 0px; height: 90%\"\r\n  >\r\n    <ng-content></ng-content>\r\n    <!-- <div class=\"panel-loader\" *ngIf=\"this.reload\"><span class=\"spinner-small\"></span></div> -->\r\n  </div>\r\n  <!-- end panel-body -->\r\n\r\n  <!-- begin no-body -->\r\n  <ng-content select=\"[noBody]\"></ng-content>\r\n  <!-- end no-body -->\r\n\r\n  <!-- begin outside-body -->\r\n  <ng-content select=\"[outsideBody]\"></ng-content>\r\n  <!-- end outside-body -->\r\n\r\n  <!-- begin panel-footer -->\r\n  <div\r\n    class=\"panel-footer\"\r\n    #panelFooter\r\n    [hidden]=\"!showFooter\"\r\n    [ngClass]=\"[this.footerClass ? this.footerClass : '']\"\r\n  >\r\n    <ng-content select=\"[footer]\"></ng-content>\r\n  </div>\r\n  <!-- end panel-footer -->\r\n\r\n  <!-- begin after-footer -->\r\n  <ng-content select=\"[afterFooter]\"></ng-content>\r\n  <!-- end after-footer -->\r\n</div>\r\n<!-- end panel -->\r\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-panel-dashboard',\r\n  inputs: ['title', 'variant', 'noBody', 'noButton', 'bodyClass', 'footerClass', 'panelClass'],\r\n  templateUrl: './panel-dashboard.component.html',\r\n  styleUrls: ['./panel-dashboard.component.css']\r\n})\r\nexport class PanelDashboardComponent implements  AfterViewInit {\r\n  @ViewChild('panelFooter') panelFooter;\r\n  title:string;\r\n  variant:boolean;\r\n  noBody:boolean;\r\n  noButton:boolean;\r\n  bodyClass:boolean;\r\n  footerClass:boolean;\r\n  panelClass:boolean;\r\n  collapse:boolean;\r\n  expand = false;\r\n  reload = false;\r\n  remove = false;\r\n  showFooter = false;\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.showFooter = this.panelFooter.nativeElement && this.panelFooter.nativeElement.children.length > 0;\r\n    });\r\n  }\r\n\r\n  panelExpand() {\r\n    this.expand = !this.expand;\r\n  }\r\n  \r\n  \r\n  panelRemove() {\r\n    confirm(\"Are Your Sure !\");\r\n    this.remove = !this.remove;\r\n  }\r\n}\r\n","<!-- begin panel -->\r\n\r\n\r\n<div class=\"panel panel-inverse h-100 d-flex flex-column\"  [ngClass]=\"[ (this.expand) ? 'panel-expand': '', (this.reload) ? 'panel-loading': '', (this.panelClass) ? this.panelClass : '', (this.variant) ? 'panel-' + this.variant : 'panel-inverse' ]\" *ngIf=\"!this.remove\">\r\n  <!-- begin panel-heading -->\r\n  <div class=\"panel-heading\">\r\n    <div class=\"panel-heading-btn\" *ngIf=\"!this.noButton\">\r\n      <ng-content select=\"[header]\"></ng-content>\r\n      &nbsp; <ng-content select=\"[expand]\"></ng-content>\r\n      &nbsp; <ng-content select=\"[deleteButton]\"></ng-content>\r\n      &nbsp; <ng-content select=\"[filterBtn]\"></ng-content>\r\n    </div>\r\n    <h4 class=\"panel-title\" *ngIf=\"this.title\">{{ title }}</h4>\r\n  </div>\r\n  <!-- end panel-heading -->\r\n\r\n  <!-- begin before-body -->\r\n  <ng-content select=\"[beforeBody]\" ></ng-content>\r\n  <!-- end before-body -->\r\n\r\n  <!-- begin panel-body -->\r\n  <div class=\"panel-body\" [ngClass]=\"[ (this.collapse) ? 'd-none': '', (this.bodyClass) ? this.bodyClass : '' ]\" *ngIf=\"!this.noBody\"  style=\"padding:0px;height: 91%;\" >\r\n    <ng-content>\r\n    </ng-content>\r\n    <div class=\"panel-loader\" *ngIf=\"this.reload\"><span class=\"spinner-small\"></span></div>\r\n  </div>\r\n  <!-- end panel-body -->\r\n\r\n  <!-- begin no-body -->\r\n  <ng-content select=\"[noBody]\"></ng-content>\r\n  <!-- end no-body -->\r\n\r\n  <!-- begin outside-body -->\r\n  <ng-content select=\"[outsideBody]\"></ng-content>\r\n  <!-- end outside-body -->\r\n\r\n  <!-- begin panel-footer -->\r\n  <div class=\"panel-footer\" #panelFooter [hidden]=\"!showFooter\" [ngClass]=\"[ (this.footerClass) ? this.footerClass : '' ]\">\r\n    <ng-content select=\"[footer]\"></ng-content>\r\n  </div>\r\n  <!-- end panel-footer -->\r\n\r\n  <!-- begin after-footer -->\r\n  <ng-content select=\"[afterFooter]\"></ng-content>\r\n  <!-- end after-footer -->\r\n</div>\r\n<!-- end panel -->\r\n<app-modal-notification></app-modal-notification>\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { AfterViewInit, Component, Inject, ViewChild } from '@angular/core';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UIModalNotificationPage } from '../../modal-notification/modal-notification';\r\n@Component({\r\n  selector: 'app-panel-remove',\r\n  inputs: ['title', 'variant', 'noBody', 'noButton', 'bodyClass', 'footerClass', 'panelClass'],\r\n  templateUrl: './panel-remove.component.html',\r\n  styleUrls: ['./panel-remove.component.css']\r\n})\r\nexport class PanelRemoveComponent implements AfterViewInit {\r\n  @ViewChild('panelFooter') panelFooter;\r\n  @ViewChild(UIModalNotificationPage) modelNotification;\r\n  title:string;\r\n  variant:boolean;\r\n  noBody:boolean;\r\n  noButton:boolean;\r\n  bodyClass:boolean;\r\n  footerClass:boolean;\r\n  panelClass:boolean;\r\n  reload = false;\r\n  collapse = false;\r\n  remove = false;\r\n  closeResult: string;\r\n  showFooter = false;\r\n  lineWidgetForm: boolean;\r\n  expand = false;\r\n  constructor(private modalService: NgbModal, @Inject(DOCUMENT) document: any) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.showFooter = this.panelFooter.nativeElement && this.panelFooter.nativeElement.children.length > 0;\r\n    });\r\n  }\r\n\r\n  panelReload() {\r\n    this.reload = true;\r\n\r\n    setTimeout(() => {\r\n        this.reload = false;\r\n    }, 1500);\r\n  }\r\n  panelCollapse() {\r\n    this.collapse = !this.collapse;\r\n  }\r\n  panelRemove() {\r\n    \r\n    this.modelNotification.swalDanger('Are you sure?', 'You will not be able to recover this Widget!');\r\n    \r\n    this.remove = !this.remove;\r\n  }\r\n\r\n  openFormModel(content,test:string) {\r\n    alert(test);\r\n\r\n    this.lineWidgetForm=true;\r\n    this.modalService.open(content, \r\n      {\r\n          windowClass: 'custom-class',\r\n          backdrop:'static'\r\n      }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n     \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n    \r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  panelExpand() {\r\n    this.expand = !this.expand;\r\n\r\n  }\r\n}\r\n","import * as XLSX from \"xlsx\";\r\n\r\nexport class exportTable {\r\n  static exportToExcel(tableId: string, name?: string) {\r\n    let timeSpan = new Date().toISOString();\r\n    let getFullDay = timeSpan.split('T');\r\n    // let prefix = name || \"downLoadedFile\";\r\n    let prefix = name;\r\n    let fileName = `${prefix}_${getFullDay[0]}`;\r\n    let targetTableElm = document.getElementById(tableId);\r\n    let wb = XLSX.utils.table_to_book(targetTableElm, <XLSX.Table2SheetOpts>{ sheet: prefix });\r\n    XLSX.writeFile(wb, `${fileName}.csv`);\r\n  }\r\n}","<!-- begin panel -->\r\n<div class=\"panel\" style=\"border:0.5px solid #cccccc;\"\r\n  [ngClass]=\"[ (this.expand) ? 'panel-expand': '', (this.reload) ? 'panel-loading': '', (this.panelClass) ? this.panelClass : '', (this.variant) ? 'panel-' + this.variant : 'panel-inverse' ]\"\r\n  *ngIf=\"!this.remove\">\r\n  <!-- begin panel-heading -->\r\n  <div class=\"panel-heading\">\r\n    <div class=\"panel-heading-btn\" *ngIf=\"!this.noButton\">\r\n\r\n      <!-- Filter search -->\r\n      <ng-content select=\"[filterButton]\"></ng-content>\r\n        <!-- Back button -->\r\n      <ng-content select=\"[backButton]\"></ng-content>\r\n\r\n      <a href=\"javascript:;\" i18n-matTooltip=\"@@ClicktoRefresh\" matTooltip=\"Click to Refresh\"\r\n        class=\"btn btn-xs btn-icon btn-circle btn-success panel-reload\" (click)=\"panelReload()\">\r\n        <i class=\"fa fa-redo\"></i>\r\n      </a>\r\n\r\n      <ng-content select=\"[searchfield]\"></ng-content>\r\n\r\n      <!-- Search button -->\r\n      <ng-content select=\"[searchButton]\"></ng-content>\r\n\r\n      <ng-content select=\"[searchfieldPanel]\"></ng-content>\r\n\r\n      <!-- Search button -->\r\n      <ng-content select=\"[searchButtonPanel]\"></ng-content>\r\n\r\n      <a href=\"javascript:;\" matTooltip=\"{{screenStatus}}\"\r\n        class=\"btn btn-xs btn-icon btn-circle btn-default panel-expand\" (click)=\"panelExpand()\">\r\n        <i class=\"fa fa-expand\"></i>\r\n      </a>\r\n\r\n\r\n      <!-- Download button -->\r\n      <ng-content select=\"[downloadButton]\"></ng-content>\r\n\r\n     \r\n\r\n      \r\n      <template #ClicktoMaximize i18n='Tooltip|Click to Maximize@@clickToMaximize'>Click to Maximize\r\n      </template>\r\n      <template #ClicktoMinimize i18n='Tooltip|Click to Minimize@@clickToMinimize'>Click to Minimize\r\n      </template>\r\n\r\n      <ng-content select=\"[addNewButton]\"></ng-content>\r\n\r\n    </div>\r\n    <h4 class=\"panel-title\" *ngIf=\"this.name\">{{ name }}</h4>\r\n    <!-- <ng-content select=\"[header]\"></ng-content> -->\r\n  </div>\r\n  <!-- end panel-heading -->\r\n\r\n  <!-- begin before-body -->\r\n  <ng-content select=\"[beforeBody]\"></ng-content>\r\n  <!-- end before-body -->\r\n\r\n  <!-- begin panel-body -->\r\n  <div class=\"panel-body\" [ngClass]=\"[ (this.collapse) ? 'd-none': '', (this.bodyClass) ? this.bodyClass : '' ]\"\r\n    *ngIf=\"!this.noBody\">\r\n    <ng-content></ng-content>\r\n    <div class=\"panel-loader\" *ngIf=\"this.reload\"><span class=\"spinner-small\"></span></div>\r\n  </div>\r\n  <!-- end panel-body -->\r\n\r\n  <!-- begin no-body -->\r\n  <ng-content select=\"[noBody]\"></ng-content>\r\n  <!-- end no-body -->\r\n\r\n  <!-- begin outside-body -->\r\n  <ng-content select=\"[outsideBody]\"></ng-content>\r\n  <!-- end outside-body -->\r\n\r\n  <!-- begin panel-footer -->\r\n  <div class=\"panel-footer\" #panelFooter [hidden]=\"!showFooter\"\r\n    [ngClass]=\"[ (this.footerClass) ? this.footerClass : '' ]\">\r\n    <ng-content select=\"[footer]\"></ng-content>\r\n  </div>\r\n  <!-- end panel-footer -->\r\n\r\n  <!-- begin after-footer -->\r\n  <ng-content select=\"[afterFooter]\"></ng-content>\r\n  <!-- end after-footer -->\r\n</div>\r\n<!-- end panel -->\r\n","import { Component, OnInit, AfterViewInit, ViewChild, Output, EventEmitter, Renderer2, ElementRef, ChangeDetectorRef, QueryList, ViewChildren } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { exportTable } from '../../../exportTable';\r\n\r\n@Component({\r\n  selector: 'app-panel-user',\r\n  templateUrl: './table-panel.component.html',\r\n  inputs: ['name', 'variant', 'noBody', 'noButton', 'bodyClass', 'footerClass', 'panelClass'],\r\n  styleUrls: ['./table-panel.component.css']\r\n})\r\nexport class TablePanelComponent implements OnInit {\r\n  @Output() scrollBarDirective = new EventEmitter<any>();\r\n  screenStatus: string = '';\r\n  name:string;\r\n  variant:boolean;\r\n  noBody:boolean;\r\n  noButton:boolean;\r\n  bodyClass:boolean;\r\n  footerClass:boolean;\r\n  panelClass:boolean;\r\n  @ViewChild('panelFooter') panelFooter;\r\n  expand = false;\r\n  reload = false;\r\n  collapse = false;\r\n  remove = false;\r\n  showFooter = false;\r\n  pageName: string;\r\n  clickToAddNew = true;\r\n  @ViewChild(\"ClicktoMaximize\") ClicktoMaximize: ElementRef;\r\n  @ViewChild(\"ClicktoMinimize\") ClicktoMinimize: ElementRef;\r\n  constructor(private router: Router, private render: Renderer2, private elRef: ElementRef,\r\n    private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.showFooter = this.panelFooter.nativeElement && this.panelFooter.nativeElement.children.length > 0;\r\n    });\r\n    this.screenStatus = this.ClicktoMaximize.nativeElement.innerText;\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  // To navigate to assign tenant menus\r\n  @Output() eventEmitToPageNaviagte = new EventEmitter<string>();\r\n  // Add new\r\n  addNew() {\r\n    // Dynamically getting page for Add new For example - addTenant, addAccount\r\n    if (this.pageName == \"templateList\") {\r\n      this.eventEmitToPageNaviagte.emit();\r\n    } else if (this.pageName == 'analogTemplateTagList') {\r\n      this.eventEmitToPageNaviagte.emit();\r\n    } else {\r\n      this.router.navigate([this.pageName]);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  @Output() panelExpandCollapse = new EventEmitter();\r\n  panelExpand() {\r\n    this.expand = !this.expand;\r\n    this.panelExpandCollapse.emit(this.expand);\r\n    if (this.expand) {\r\n      //  this.screenStatus = \"Click to Minimize\";\r\n      this.screenStatus = this.ClicktoMinimize.nativeElement.innerText;\r\n    } else {\r\n      // this.screenStatus = \"Click to Maximize\";\r\n      this.screenStatus = this.ClicktoMaximize.nativeElement.innerText;\r\n    }\r\n  }\r\n\r\n\r\n  // Refresh functionality for table list\r\n  @Output() refreshTableList = new EventEmitter<string>();\r\n  panelReload() {\r\n    this.reload = true;\r\n    this.refreshTableList.emit();\r\n    // this.refreshTableList.emit('refreshTable');\r\n    setTimeout(() => {\r\n      this.reload = false;\r\n    }, 1500);\r\n  }\r\n  panelCollapse() {\r\n    this.collapse = !this.collapse;\r\n  }\r\n  panelRemove() {\r\n    this.remove = !this.remove;\r\n  }\r\n\r\n  // Search button show/hide\r\n  inpputSearchBoxElement\r\n  searchButton(dataSource?) {\r\n    this.inpputSearchBoxElement = document.getElementById(\"filter\");\r\n    if (this.inpputSearchBoxElement.style.display === \"none\") {\r\n      this.inpputSearchBoxElement.style.display = \"inline-block\";\r\n      // this.setTableDasourceAsDefault(dataSource);\r\n    } else {\r\n      this.inpputSearchBoxElement.style.display = \"none\";\r\n      this.setTableDasourceAsDefault(dataSource);\r\n    }\r\n  }\r\n\r\n  searchButtonPanel(dataSource?) {\r\n    this.inpputSearchBoxElement = document.getElementById(\"search\");\r\n    if (this.inpputSearchBoxElement.style.display === \"none\") {\r\n      this.inpputSearchBoxElement.style.display = \"inline-block\";\r\n      // this.setTableDasourceAsDefault(dataSource);\r\n    } else {\r\n      this.inpputSearchBoxElement.style.display = \"none\";\r\n      this.setTableDasourceAsDefault(dataSource);\r\n    }\r\n  }\r\n  /* \r\n    Developer : Anandhan\r\n    Purpose: In table panel, Click to search/filter > click to hide/show input filter search box >\r\n              response data set back to Table datasource and input field make as a empty\r\n  */\r\n\r\n  setTableDasourceAsDefault(dataSource) {\r\n    if (this.inpputSearchBoxElement != undefined) {\r\n      (this.inpputSearchBoxElement as HTMLInputElement).value = '';\r\n    }\r\n\r\n    this.applyFilter('', dataSource);\r\n  }\r\n\r\n\r\n\r\n  // Panel header filter\r\n  applyFilter(filterValue, dataSource) {\r\n    dataSource.filter = filterValue.trim().toLowerCase();\r\n    this.scrollBarDirective.emit();\r\n  }\r\n\r\n  exportTable(tableName, fileName) {\r\n    exportTable.exportToExcel(tableName, fileName);\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'input[numbersOnly]'\r\n})\r\nexport class NumberDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('input', ['$event']) onInputChange(event) {\r\n    const initalValue = this._el.nativeElement.value;\r\n    // this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\r\n    this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\r\n    if ( initalValue !== this._el.nativeElement.value) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n}","import { InjectionToken } from '@angular/core';\r\n\r\nexport const PERFECT_SCROLLBAR_CONFIG = new InjectionToken('PERFECT_SCROLLBAR_CONFIG');\r\n\r\nexport class Geometry {\r\n  public x: number;\r\n  public y: number;\r\n\r\n  public w: number;\r\n  public h: number;\r\n\r\n  constructor(x: number, y: number, w: number, h: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = w;\r\n    this.h = h;\r\n  }\r\n}\r\n\r\nexport class Position {\r\n  public x: number | 'start' | 'end';\r\n  public y: number | 'start' | 'end';\r\n\r\n  constructor(x: number | 'start' | 'end', y: number | 'start' | 'end') {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n\r\nexport type PerfectScrollbarEvent = 'psScrollY' | 'psScrollX' | 'psScrollUp'| 'psScrollDown' |\r\n  'psScrollLeft' | 'psScrollRight' | 'psYReachEnd' | 'psYReachStart' | 'psXReachEnd' | 'psXReachStart';\r\n\r\nexport const PerfectScrollbarEvents: PerfectScrollbarEvent[] = [\r\n  'psScrollY',\r\n  'psScrollX',\r\n\r\n  'psScrollUp',\r\n  'psScrollDown',\r\n  'psScrollLeft',\r\n  'psScrollRight',\r\n\r\n  'psYReachEnd',\r\n  'psYReachStart',\r\n  'psXReachEnd',\r\n  'psXReachStart'\r\n];\r\n\r\nexport interface PerfectScrollbarConfigInterface {\r\n  handlers?: string[];\r\n\r\n  wheelSpeed?: number;\r\n  swipeEasing?: boolean;\r\n\r\n  suppressScrollX?: boolean;\r\n  suppressScrollY?: boolean;\r\n\r\n  wheelPropagation?: boolean;\r\n  useBothWheelAxes?: boolean;\r\n\r\n  scrollingThreshold?: number;\r\n\r\n  minScrollbarLength?: number;\r\n  maxScrollbarLength?: number;\r\n\r\n  scrollXMarginOffset?: number;\r\n  scrollYMarginOffset?: number;\r\n}\r\n\r\nexport class PerfectScrollbarConfig implements PerfectScrollbarConfigInterface {\r\n  public handlers?: string[];\r\n\r\n  public wheelSpeed?: number;\r\n  public swipeEasing?: boolean;\r\n\r\n  public suppressScrollX?: boolean;\r\n  public suppressScrollY?: boolean;\r\n\r\n  public wheelPropagation?: boolean;\r\n  public useBothWheelAxes?: boolean;\r\n\r\n  public scrollingThreshold?: number;\r\n\r\n  public minScrollbarLength?: number;\r\n  public maxScrollbarLength?: number;\r\n\r\n  public scrollXMarginOffset?: number;\r\n  public scrollYMarginOffset?: number;\r\n\r\n  constructor(config: PerfectScrollbarConfigInterface = {}) {\r\n    this.assign(config);\r\n  }\r\n\r\n  public assign(config: PerfectScrollbarConfigInterface = {}) {\r\n    for (const key in config) {\r\n      this[key as keyof PerfectScrollbarConfig] = config[key as keyof PerfectScrollbarConfigInterface] as never;\r\n    }\r\n  }\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n  Directive,\r\n  DoCheck, ElementRef,\r\n  EventEmitter, HostListener, Inject,\r\n  Input,\r\n  KeyValueDiffer, KeyValueDiffers, NgZone,\r\n  OnChanges, OnDestroy, OnInit, Optional,\r\n  Output, PLATFORM_ID, SimpleChanges\r\n} from '@angular/core';\r\nimport $ from 'jquery';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { auditTime, takeUntil } from 'rxjs/operators';\r\nimport {\r\n  Geometry, PerfectScrollbarConfig, PerfectScrollbarConfigInterface,\r\n  PerfectScrollbarEvent, PerfectScrollbarEvents, PERFECT_SCROLLBAR_CONFIG, Position\r\n} from './scroll-bar.interfaces';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Directive({\r\n  selector: '[appScrollbarDirective]',\r\n  exportAs: 'ngxPerfectScrollbar'\r\n})\r\nexport class ScrollbarDirective implements OnInit, OnDestroy, DoCheck, OnChanges {\r\n  private instance: PerfectScrollbar | null = null;\r\n\r\n  private ro: ResizeObserver | null = null;\r\n\r\n  private timeout: number | null = null;\r\n  private animation: number | null = null;\r\n\r\n  private configDiff: KeyValueDiffer<string, any> | null = null;\r\n\r\n  private readonly ngDestroy: Subject<void> = new Subject();\r\n\r\n  @Input() disabled: boolean = false;\r\n\r\n  @Input('perfectScrollbar') config?: PerfectScrollbarConfigInterface;\r\n\r\n  @Output() psScrollY: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() psScrollX: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output() psScrollUp: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() psScrollDown: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() psScrollLeft: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() psScrollRight: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output() psYReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() psYReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() psXReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() psXReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private zone: NgZone, private differs: KeyValueDiffers,\r\n    public elementRef: ElementRef, @Inject(PLATFORM_ID) private platformId: Object,\r\n    @Optional() @Inject(PERFECT_SCROLLBAR_CONFIG) private defaults: PerfectScrollbarConfigInterface,\r\n    private el: ElementRef) { }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.disabled && isPlatformBrowser(this.platformId)) {\r\n      const config = new PerfectScrollbarConfig(this.defaults);\r\n\r\n      config.assign(this.config); // Custom configuration\r\n\r\n      this.zone.runOutsideAngular(() => {\r\n        this.instance = new PerfectScrollbar(this.elementRef.nativeElement, config);\r\n      });\r\n\r\n      if (!this.configDiff) {\r\n        this.configDiff = this.differs.find(this.config || {}).create();\r\n\r\n        this.configDiff.diff(this.config || {});\r\n      }\r\n\r\n      this.zone.runOutsideAngular(() => {\r\n        this.ro = new ResizeObserver(() => {\r\n          this.update();\r\n        });\r\n\r\n        if (this.elementRef.nativeElement.children[0]) {\r\n          this.ro.observe(this.elementRef.nativeElement.children[0]);\r\n        }\r\n\r\n        this.ro.observe(this.elementRef.nativeElement);\r\n      });\r\n\r\n      this.zone.runOutsideAngular(() => {\r\n        PerfectScrollbarEvents.forEach((eventName: PerfectScrollbarEvent) => {\r\n          const eventType = eventName.replace(/([A-Z])/g, (c) => `-${c.toLowerCase()}`);\r\n\r\n          fromEvent<Event>(this.elementRef.nativeElement, eventType)\r\n            .pipe(\r\n              auditTime(20),\r\n              takeUntil(this.ngDestroy)\r\n            )\r\n            .subscribe((event: Event) => {\r\n              this[eventName].emit(event);\r\n            });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.ngDestroy.next();\r\n      this.ngDestroy.complete();\r\n\r\n      if (this.ro) {\r\n        this.ro.disconnect();\r\n      }\r\n\r\n      if (this.timeout && typeof window !== 'undefined') {\r\n        window.clearTimeout(this.timeout);\r\n      }\r\n\r\n      this.zone.runOutsideAngular(() => {\r\n        if (this.instance) {\r\n          this.instance.destroy();\r\n        }\r\n      });\r\n\r\n      this.instance = null;\r\n    }\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if (!this.disabled && this.configDiff && isPlatformBrowser(this.platformId)) {\r\n      const changes = this.configDiff.diff(this.config || {});\r\n\r\n      if (changes) {\r\n        this.ngOnDestroy();\r\n\r\n        this.ngOnInit();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['disabled'] && !changes['disabled'].isFirstChange() && isPlatformBrowser(this.platformId)) {\r\n      if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\r\n        if (changes['disabled'].currentValue === true) {\r\n          this.ngOnDestroy();\r\n        } else if (changes['disabled'].currentValue === false) {\r\n          this.ngOnInit();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public ps(): PerfectScrollbar | null {\r\n    return this.instance;\r\n  }\r\n\r\n  public update(): void {\r\n    if (typeof window !== 'undefined') {\r\n      if (this.timeout) {\r\n        window.clearTimeout(this.timeout);\r\n      }\r\n\r\n      this.timeout = window.setTimeout(() => {\r\n        if (!this.disabled && this.configDiff) {\r\n          try {\r\n            this.zone.runOutsideAngular(() => {\r\n              if (this.instance) {\r\n                this.instance.update();\r\n              }\r\n            });\r\n          } catch (error) {\r\n            // Update can be finished after destroy so catch errors\r\n          }\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  public geometry(prefix: string = 'scroll'): Geometry {\r\n    return new Geometry(\r\n      this.elementRef.nativeElement[prefix + 'Left'],\r\n      this.elementRef.nativeElement[prefix + 'Top'],\r\n      this.elementRef.nativeElement[prefix + 'Width'],\r\n      this.elementRef.nativeElement[prefix + 'Height']\r\n    );\r\n  }\r\n\r\n  public position(absolute: boolean = false): Position {\r\n    if (!absolute && this.instance) {\r\n      return new Position(\r\n        this.instance.reach.x || 0,\r\n        this.instance.reach.y || 0\r\n      );\r\n    } else {\r\n      return new Position(\r\n        this.elementRef.nativeElement.scrollLeft,\r\n        this.elementRef.nativeElement.scrollTop\r\n      );\r\n    }\r\n  }\r\n\r\n  public scrollable(direction: string = 'any'): boolean {\r\n    const element = this.elementRef.nativeElement;\r\n\r\n    if (direction === 'any') {\r\n      return element.classList.contains('ps--active-x') ||\r\n        element.classList.contains('ps--active-y');\r\n    } else if (direction === 'both') {\r\n      return element.classList.contains('ps--active-x') &&\r\n        element.classList.contains('ps--active-y');\r\n    } else {\r\n      return element.classList.contains('ps--active-' + direction);\r\n    }\r\n  }\r\n\r\n  public scrollTo(x: number, y?: number, speed?: number): void {\r\n    if (!this.disabled) {\r\n      if (y == null && speed == null) {\r\n        this.animateScrolling('scrollTop', x, speed);\r\n      } else {\r\n        if (x != null) {\r\n          this.animateScrolling('scrollLeft', x, speed);\r\n        }\r\n\r\n        if (y != null) {\r\n          this.animateScrolling('scrollTop', y, speed);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public scrollToX(x: number, speed?: number): void {\r\n    this.animateScrolling('scrollLeft', x, speed);\r\n  }\r\n\r\n  public scrollToY(y: number, speed?: number): void {\r\n    this.animateScrolling('scrollTop', y, speed);\r\n  }\r\n\r\n  public scrollToTop(offset?: number, speed?: number): void {\r\n    this.animateScrolling('scrollTop', (offset || 0), speed);\r\n  }\r\n\r\n  public scrollToLeft(offset?: number, speed?: number): void {\r\n    this.animateScrolling('scrollLeft', (offset || 0), speed);\r\n  }\r\n\r\n  public scrollToRight(offset?: number, speed?: number): void {\r\n    const left = this.elementRef.nativeElement.scrollWidth -\r\n      this.elementRef.nativeElement.clientWidth;\r\n\r\n    this.animateScrolling('scrollLeft', left - (offset || 0), speed);\r\n  }\r\n\r\n  public scrollToBottom(offset?: number, speed?: number): void {\r\n    const top = this.elementRef.nativeElement.scrollHeight -\r\n      this.elementRef.nativeElement.clientHeight;\r\n\r\n    this.animateScrolling('scrollTop', top - (offset || 0), speed);\r\n  }\r\n\r\n  public scrollToElement(qs: string, offset?: number, speed?: number): void {\r\n    const element = this.elementRef.nativeElement.querySelector(qs);\r\n\r\n    if (element) {\r\n      const elementPos = element.getBoundingClientRect();\r\n\r\n      const scrollerPos = this.elementRef.nativeElement.getBoundingClientRect();\r\n\r\n      if (this.elementRef.nativeElement.classList.contains('ps--active-x')) {\r\n        const currentPos = this.elementRef.nativeElement['scrollLeft'];\r\n\r\n        const position = elementPos.left - scrollerPos.left + currentPos;\r\n\r\n        this.animateScrolling('scrollLeft', position + (offset || 0), speed);\r\n      }\r\n\r\n      if (this.elementRef.nativeElement.classList.contains('ps--active-y')) {\r\n        const currentPos = this.elementRef.nativeElement['scrollTop'];\r\n\r\n        const position = elementPos.top - scrollerPos.top + currentPos;\r\n\r\n        this.animateScrolling('scrollTop', position + (offset || 0), speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  private animateScrolling(target: string, value: number, speed?: number): void {\r\n    if (this.animation) {\r\n      window.cancelAnimationFrame(this.animation);\r\n\r\n      this.animation = null;\r\n    }\r\n\r\n    if (!speed || typeof window === 'undefined') {\r\n      this.elementRef.nativeElement[target] = value;\r\n    } else if (value !== this.elementRef.nativeElement[target]) {\r\n      let newValue = 0;\r\n      let scrollCount = 0;\r\n\r\n      let oldTimestamp = performance.now();\r\n      let oldValue = this.elementRef.nativeElement[target];\r\n\r\n      const cosParameter = (oldValue - value) / 2;\r\n\r\n      const step = (newTimestamp: number) => {\r\n        scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\r\n\r\n        newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount));\r\n\r\n        // Only continue animation if scroll position has not changed\r\n        if (this.elementRef.nativeElement[target] === oldValue) {\r\n          if (scrollCount >= Math.PI) {\r\n            this.animateScrolling(target, value, 0);\r\n          } else {\r\n            this.elementRef.nativeElement[target] = newValue;\r\n\r\n            // On a zoomed out page the resulting offset may differ\r\n            oldValue = this.elementRef.nativeElement[target];\r\n\r\n            oldTimestamp = newTimestamp;\r\n\r\n            this.animation = window.requestAnimationFrame(step);\r\n          }\r\n        }\r\n      };\r\n\r\n      window.requestAnimationFrame(step);\r\n    }\r\n  }\r\n\r\n  @HostListener('click', [\"$event\"])\r\n  public onClick(event: Event) {\r\n    if ($(event.target).hasClass('cancelActionButton') ||\r\n      $(event.target).hasClass('backActionButton') ||\r\n      $(event.target).hasClass('reviewAndSaveActionButton') ||\r\n      $(event.target).hasClass('saveActionButton')) {\r\n      this.scrollPositionToTop();\r\n    }\r\n  }\r\n\r\n  // Scroll to top position\r\n  scrollPositionToTop() {\r\n    document.querySelector('#containerTop').scrollTop = 0;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'hyphen'\r\n})\r\nexport class HyphenPipe implements PipeTransform {\r\n\r\n  public transform(value: string): string {\r\n    return (value) ? value : ('-');\r\n  }\r\n\r\n}\r\n","import { L10n } from \"@syncfusion/ej2-base\";\r\nimport { MatPaginatorIntl } from '@angular/material/paginator';\r\nimport '@angular/localize/init';\r\n\r\n// Syncfusion - dropdown list - No Records Found\r\nexport function syncDropdownNoRecordsFoundLocale() {\r\n   \r\n    L10n.load({\r\n        'hi': {\r\n            'dropdowns': {\r\n                'noRecordsTemplate': \"कोई रिकॉर्ड नहीं मिला!\"\r\n            },\r\n            dropdowntree:{\r\n                noRecordsTemplate: \"कोई रिकॉर्ड नहीं मिला!\"\r\n            }\r\n        }, 'ar': {\r\n            'dropdowns': {\r\n                'noRecordsTemplate': \"لا توجد سجلات!\"\r\n            },\r\n            dropdowntree: {\r\n                noRecordsTemplate: \"لا توجد سجلات!\"\r\n            }\r\n        }\r\n    });\r\n}\r\n \r\n\r\nconst matRangeLabelIntl = (page: number, pageSize: number, length: number) => {\r\n    if (length === 0 || pageSize === 0) {\r\n        return $localize`:@@paginator.zeroRange:0 of ${length}`\r\n    }\r\n    length = Math.max(length, 0)\r\n    const startIndex = page * pageSize\r\n\r\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n    const endIndex = startIndex < length ?  Math.min(startIndex + pageSize, length) : startIndex + pageSize\r\n    return $localize`:@@paginator.rangeOfLabel:${startIndex + 1} - ${endIndex} of ${length}`\r\n}\r\n\r\n\r\nexport function MyPaginatorIntl() {\r\n    const paginatorIntl = new MatPaginatorIntl()\r\n\r\n    paginatorIntl.itemsPerPageLabel = $localize`:@@paginator.displayPerPage:Items per page`\r\n    paginatorIntl.nextPageLabel = $localize`:@@paginator.nextPage:Next page`\r\n    paginatorIntl.previousPageLabel = $localize`:@@paginator.prevPage:Prev page`\r\n    paginatorIntl.lastPageLabel=$localize`:@@paginator.lastPage:Last page`\r\n    paginatorIntl.firstPageLabel=$localize`:@@paginator.firstPage:First page`\r\n    paginatorIntl.getRangeLabel = matRangeLabelIntl\r\n \r\n    return paginatorIntl\r\n}\r\n  \r\n ","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { UIModalNotificationPage } from './component/modal-notification/modal-notification';\r\nimport { PageNotFoundComponent } from './component/page-not-found/page-not-found.component';\r\nimport { AssetDataPanelComponent } from './component/panel/asset-data-panel/asset-data-panel.component';\r\nimport { PanelBlankComponent } from './component/panel/panel-blank/panel-blank.component';\r\nimport { PanelDashboardComponent } from './component/panel/panel-dashboard/panel-dashboard.component';\r\nimport { PanelRemoveComponent } from './component/panel/panel-remove/panel-remove.component';\r\nimport { TablePanelComponent } from './component/panel/table-panel/table-panel.component';\r\nimport { NumberDirective } from './directive/number-validate/numbers-only.directive';\r\nimport { ScrollbarDirective } from './directive/scroll-bar/scroll-bar.directive';\r\nimport { GlobalComponent } from './global.component';\r\nimport { HyphenPipe } from './pipe/hypen/hyphen.pipe';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MyPaginatorIntl, syncDropdownNoRecordsFoundLocale } from './common/generic-export';\r\nimport { MatPaginatorIntl } from '@angular/material/paginator';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GlobalComponent,\r\n    UIModalNotificationPage,\r\n    PageNotFoundComponent,\r\n    AssetDataPanelComponent,\r\n    PanelBlankComponent,\r\n    PanelDashboardComponent,\r\n    PanelRemoveComponent,\r\n    TablePanelComponent,\r\n    NumberDirective,\r\n    ScrollbarDirective,\r\n    HyphenPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [\r\n    GlobalComponent,\r\n    UIModalNotificationPage,\r\n    PageNotFoundComponent,\r\n    AssetDataPanelComponent,\r\n    PanelBlankComponent,\r\n    PanelDashboardComponent,\r\n    PanelRemoveComponent,\r\n    TablePanelComponent,\r\n    NumberDirective,\r\n    ScrollbarDirective,\r\n    HyphenPipe\r\n  ],\r\n  providers:[\r\n    {\r\n      provide: MatPaginatorIntl,\r\n      useValue: MyPaginatorIntl()\r\n    }, {\r\n      // Syncfusion dropdown - No records found localization\r\n      provide: syncDropdownNoRecordsFoundLocale,\r\n      useValue: syncDropdownNoRecordsFoundLocale()\r\n    }\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class GlobalModule { }\r\n","export class ErrorData {\r\n\r\n    loginError: string\r\n}","export class ResponseEntity {\r\n    object: Object;\r\n    code: number;\r\n    message: String;\r\n}","export class TimeZone{\r\n    id: number;\r\n    name: string;\r\n    abbreviation:string;\r\n    createdOn: Date;\r\n    updatedOn: Date;\r\n    createdBy: number;\r\n    updatedBy: number;\r\n    status: string;\r\n}","import { Injectable, OnDestroy } from \"@angular/core\";\r\nimport { Router } from '@angular/router';\r\nconst MINUTES_UNITL_AUTO_LOGOUT = 1 // in mins\r\nconst CHECK_INTERVAL = 15000 // in ms\r\nconst STORE_KEY = 'lastAction';\r\n@Injectable()\r\nexport class AutoLogoutService implements OnDestroy {\r\n  currentSigOnTime: any;\r\n  userId: string;\r\n  inter: NodeJS.Timeout;\r\n  public getLastAction() {\r\n    return parseInt(localStorage.getItem(\"lastAction\"));\r\n  }\r\n  public setLastAction(lastAction: number) {\r\n    localStorage.setItem(STORE_KEY, lastAction.toString());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    // this.check();\r\n    //this.initListener();\r\n    //this.initInterval();\r\n    // localStorage.setItem(STORE_KEY, Date.now().toString());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    clearInterval(this.inter);\r\n  }\r\n\r\n  initListener() {\r\n    document.body.addEventListener('click', () => this.reset());\r\n    document.body.addEventListener('mouseover', () => this.reset());\r\n    document.body.addEventListener('mouseout', () => this.reset());\r\n    document.body.addEventListener('keydown', () => this.reset());\r\n    document.body.addEventListener('keyup', () => this.reset());\r\n    document.body.addEventListener('keypress', () => this.reset());\r\n  }\r\n\r\n  reset() {\r\n    this.setLastAction(Date.now());\r\n  }\r\n\r\n  initInterval() {\r\n    this.inter = setInterval(() => {\r\n      this.check();\r\n    }, CHECK_INTERVAL);\r\n  }\r\n  getSignOnHistoryByUserId(userId: string) {\r\n    /* this.logoutService.getSignOnHistoryByUserId(userId).subscribe(res => {\r\n      this.currentSigOnTime = res;\r\n      // \r\n    },\r\n      error => {\r\n        \r\n      }\r\n    ) */\r\n  }\r\n  check() {\r\n    this.userId = sessionStorage.getItem('userId');\r\n    const now = Date.now();\r\n    let lastAction = this.getLastAction();\r\n    const timeleft = lastAction + MINUTES_UNITL_AUTO_LOGOUT * 60 * 1000;\r\n    const diff = timeleft - now;\r\n    const isTimeout = diff < 0;\r\n    if (this.currentSigOnTime != null || this.userId != undefined || this.userId != null) {\r\n      if (isTimeout) {\r\n        alert(\"session expired\");\r\n        this.logout();\r\n        localStorage.clear();\r\n        this.router.navigate(['']);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  logout() {\r\n    this.userId = sessionStorage.getItem('userId');\r\n    /* this.logoutService.logout(this.userId).subscribe(response => {\r\n      localStorage.clear();\r\n      localStorage.removeItem('pagemenu');\r\n      sessionStorage.clear();\r\n      sessionStorage.removeItem('userId');\r\n      sessionStorage.removeItem('userName');\r\n      this.router.navigate(['']);\r\n    },\r\n      error => {\r\n        \r\n    );\r\n  } */\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n\r\n  navigateAwaySelection$: Subject<boolean> = new Subject<boolean>();\r\n\r\n  /**\r\n   * Ask user to confirm an action. `message` explains the action and choices.\r\n   * Returns Prmose resolving to `true`=confirm or `false`=cancel\r\n   */\r\n\r\n  //  Warning - when unsaved changes done ask user to confirm/cancel. \r\n  alertMessage(title, text): Promise<any> {\r\n    return new Promise((resolve) => {\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: text,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Ok',\r\n        cancelButtonText: 'Cancel',\r\n        reverseButtons: true,\r\n        showCloseButton: true,\r\n        customClass: {\r\n          confirmButton: 'btn btn-warning',\r\n          container: 'warning_info',\r\n        }\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.navigateAwaySelection$.next(true);\r\n          return resolve(true);\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Workbook } from 'exceljs';\r\nimport * as fs from 'file-saver';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExcelService {\r\n\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  generateExcel(excelObject, excelSearchFilterFields) {\r\n\r\n    //Create workbook and worksheet\r\n    let workbook = new Workbook();\r\n    // create new sheet with pageSetup settings for A4 - landscape\r\n    let worksheet = workbook.addWorksheet(excelObject.excelWorkSheetName, {\r\n      pageSetup: { paperSize: 9, orientation: 'landscape' }\r\n    });\r\n    worksheet.properties.defaultColWidth = 20;\r\n\r\n    //Add Row and formatting\r\n    let excelWorkSheetTitle = worksheet.addRow([excelObject.title]);\r\n    excelWorkSheetTitle.font = {\r\n      name: 'Calibri',\r\n      family: 4,\r\n      size: 20,\r\n      underline: false,\r\n      bold: true\r\n    }\r\n    excelWorkSheetTitle.alignment = {\r\n      horizontal: 'left',\r\n      vertical: 'middle'\r\n    }\r\n\r\n    worksheet.addRow([]);\r\n\r\n    // Merge cells between A1 to N2\r\n    worksheet.mergeCells('A1:N2');\r\n\r\n    //Blank Row \r\n    worksheet.addRow([]);\r\n\r\n\r\n    /* \r\n    ========================================================\r\n      Search filter fields  - Starts here\r\n      ========================================================\r\n    */\r\n\r\n    if (excelSearchFilterFields.searchFilterKeysValues.length) {\r\n      //Add Row and formatting\r\n      let searchCriteriaText = worksheet.addRow([excelSearchFilterFields.searchCriteriaText]);\r\n      searchCriteriaText.font = {\r\n        name: 'Calibri',\r\n        family: 4,\r\n        size: 16,\r\n        bold: true\r\n      }\r\n      excelWorkSheetTitle.alignment = {\r\n        horizontal: 'left',\r\n        vertical: 'middle'\r\n      }\r\n\r\n      let excelSearchFilterFieldsData = excelSearchFilterFields.searchFilterKeysValues;\r\n\r\n\r\n      excelSearchFilterFieldsData.forEach(d => {\r\n        let row = worksheet.addRow(d);\r\n        // Cell Style for Table header data : Fill and Border and Font\r\n        row.eachCell((cell, number) => {\r\n          cell.font = {\r\n            name: 'Calibri',\r\n            family: 4,\r\n            bold: false,\r\n            size: 12\r\n          }\r\n          if (number == 1) {\r\n            cell.font.bold = true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n\r\n\r\n    /* \r\n      ========================================================\r\n      Search filter fields  - ends here\r\n      ========================================================\r\n    */\r\n\r\n    worksheet.addRow([]);\r\n\r\n    /* \r\n     ========================================================\r\n       Creating Row for Table header and display in Excel sheet  - Starts here\r\n       ========================================================\r\n    */\r\n\r\n    //Add Header Row\r\n    let excelTableHeaderNames = worksheet.addRow(excelObject.tableHeaderNames);\r\n\r\n    // Cell Style for Table header data : Fill and Border and Font\r\n    excelTableHeaderNames.eachCell((cell, number) => {\r\n      cell.fill = {\r\n        type: 'pattern',\r\n        pattern: 'solid',\r\n        fgColor: { argb: 'F2DEFF' },\r\n        // bgColor: { argb: 'FF0000FF' }\r\n      }\r\n\r\n      cell.font = {\r\n        name: 'Calibri',\r\n        family: 4,\r\n        bold: true,\r\n        size: 12\r\n      }\r\n\r\n      cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } }\r\n    })\r\n\r\n    /* \r\n     ========================================================\r\n       Creating Row for Table header and display in Excel sheet -  Ends here\r\n       ========================================================\r\n    */\r\n\r\n\r\n    /* \r\n      ========================================================\r\n        Add table body data and display in Excel - Starts here \r\n        ========================================================\r\n     */\r\n\r\n    let excelTableBodyData = excelObject.tableBodyData;\r\n\r\n    excelTableBodyData.forEach(d => {\r\n      let row = worksheet.addRow(d);\r\n\r\n      // Cell Style for Table header data : Fill and Border and Font\r\n      row.eachCell((cell, number) => {\r\n        cell.fill = {\r\n          type: 'pattern',\r\n          pattern: 'solid',\r\n          fgColor: { argb: 'FFFFFF' },\r\n          // bgColor: { argb: 'FF0000FF' }\r\n        }\r\n        cell.font = {\r\n          name: 'Calibri',\r\n          family: 4,\r\n          bold: false,\r\n          size: 12\r\n        }\r\n        cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } }\r\n      });\r\n    });\r\n\r\n    /* \r\n     ========================================================\r\n       Add table body data and display in Excel -  Ends here\r\n       ========================================================\r\n    */\r\n\r\n    worksheet.addRow([]);\r\n\r\n    /* \r\n     ========================================================\r\n       Footer Row - Starts here\r\n       ========================================================\r\n    */\r\n\r\n    let excelFooterRow = worksheet.addRow(['Disclaimer: This is system generated report.']);\r\n    excelFooterRow.getCell(1).fill = {\r\n      type: 'pattern',\r\n      pattern: 'none',\r\n      fgColor: { argb: 'FFFFFF' }\r\n    };\r\n    excelFooterRow.getCell(1).font = {\r\n      name: 'Calibri',\r\n      family: 4,\r\n      bold: true,\r\n      size: 12\r\n    }\r\n    // excelFooterRow.getCell(1).border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } }\r\n\r\n    //Merge Cells\r\n    worksheet.mergeCells(`A${excelFooterRow.number}:F${excelFooterRow.number}`);\r\n\r\n    /* \r\n    ========================================================\r\n      Footer Row - Ends here\r\n      ========================================================\r\n   */\r\n\r\n    /* \r\n   ========================================================\r\n     Generate Excel File with given name - Starts here\r\n     ========================================================\r\n  */\r\n\r\n    workbook.xlsx.writeBuffer().then((data) => {\r\n      let blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      fs.saveAs(blob, excelObject.fileName + '.xlsx');\r\n    })\r\n\r\n    /* \r\n  ========================================================\r\n    Generate Excel File with given name - Ends here\r\n    ========================================================\r\n */\r\n\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PdfService {\r\n\r\n  constructor() { }\r\n\r\n\r\n  generatePDF(pdfObject, pdfSearchFilterFields) {\r\n\r\n    let head = [pdfObject.tableHeaderNames];\r\n\r\n    let pdfTableBodyData = pdfObject.tableBodyData;\r\n\r\n    // Create Object for PDF\r\n\r\n    var doc = new jsPDF('l', 'mm', \"a1\");\r\n\r\n    doc.setFontSize(20);\r\n    doc.text(pdfObject.title, 15, 10);\r\n\r\n    /* \r\n    ========================================================\r\n    Search filter fields  - Starts here\r\n    ========================================================\r\n  */\r\n\r\n    if (pdfSearchFilterFields.searchFilterKeysValues.length) {\r\n      doc.setFontSize(16);\r\n      doc.text(pdfSearchFilterFields.searchCriteriaText, 15, 24);\r\n\r\n      let pdfSearchFilterFieldsData = pdfSearchFilterFields.searchFilterKeysValues;\r\n\r\n      (doc as any).autoTable({\r\n        body: pdfSearchFilterFieldsData,\r\n        theme: 'plain',\r\n        head: null,\r\n        styles: {\r\n          cellWidth: 100,\r\n        },\r\n        bodyStyles: {\r\n          fontSize: 12,\r\n        },\r\n        headStyles: {\r\n          fontSize: 12\r\n        },\r\n        startY: 25,\r\n        didParseCell: data => {\r\n          if (data.column.index === 0) {\r\n            data.cell.styles.fontStyle = \"bold\"\r\n          } else {\r\n            data.cell.minWidth = 200;\r\n            data.cell.cellWidth = 200;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    /* \r\n    ========================================================\r\n    Search filter fields  - ends here\r\n    ========================================================\r\n  */\r\n\r\n    /* \r\n    ========================================================\r\n      Add table body data and display in PDF - Starts here \r\n      ========================================================\r\n  */\r\n\r\n    (doc as any).autoTable({\r\n      headStyles: {\r\n        cellWidth: 'auto',\r\n        overflow: 'visible',\r\n        lineWidth: 1,\r\n        lineColor: ['F0EEEE'],\r\n        fontSize: 12\r\n      },\r\n      head: head,\r\n      body: pdfTableBodyData,\r\n      bodyStyles: { fontSize: 12 },\r\n      theme: 'grid',\r\n      didParseCell: function (cell, data) {\r\n        if (cell.section === 'head') {\r\n          cell.cell.styles.fillColor = \"#f2f3f4\";\r\n          cell.cell.styles.textColor = \"#000000\"\r\n        }\r\n      },\r\n    })\r\n\r\n\r\n    /* \r\n     ========================================================\r\n       Add table body data and display in PDF -  Ends here\r\n       ========================================================\r\n    */\r\n\r\n\r\n    doc.setFontSize(12);\r\n    let finalY = (doc as any).lastAutoTable.finalY + 15; // The y position on the page\r\n    doc.text(\"Disclaimer: This is system generated report.\", 15, finalY)\r\n\r\n\r\n    /* \r\n  ========================================================\r\n    Generate PDF File with given name - Starts here\r\n    ========================================================\r\n  */\r\n    doc.save(pdfObject.fileName);\r\n    // doc.output('dataurlnewwindow'); \r\n\r\n    /* \r\n========================================================\r\nGenerate PDF File with given name - Ends here\r\n========================================================\r\n*/\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { AngularCsv } from 'angular7-csv/dist/Angular-csv';\r\nimport { ExcelService } from '../excel/excel.service';\r\nimport { PdfService } from '../pdf/pdf.service';\r\nimport $ from 'jquery';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class globalSharedService {\r\n\r\n    // Getting ID value \r\n    name: any;\r\n    public selectedId = null;\r\n    public listOfRow: any;\r\n    pageName: string;\r\n    public userDetails: any;\r\n    tabClick = null;\r\n    urlName = null;\r\n    listOfModulesforServices: any;\r\n    parentName: any;\r\n\r\n    analogAssetObj: any;\r\n\r\n    // Asset configuration page\r\n    assetViewModeFormViewStatus = 'assetViewMode';\r\n    result: string;\r\n    isadmin: boolean;\r\n    landingMenuUrlForHome: any;\r\n    maxUser: any;\r\n    roleList: any[];\r\n    assetDetails: any;\r\n    globalId: any;\r\n    notificationMediaList: any[];\r\n    confirmedNotificationGroupList: any[];\r\n    usersList: any[];\r\n    public notificationGroupDetails: any;\r\n    notificationMediaTabDetails: any;\r\n    notificationGroupmediaDetails: any;\r\n    backId: string;\r\n    dataDataSource: any;\r\n    onpageloadNotificationGroupMediaDetails: any;\r\n    confirmedAccessGroupList: any;\r\n    id: number;\r\n    reminingUser: number;\r\n    maxUsers: number;\r\n    dataServerTime: any;\r\n    emailId: string;\r\n    dropDownTextSettings: {\r\n        text: string;\r\n        noDataLabel: string;\r\n    };\r\n    setassetViewModeFormViewStatus(view) {\r\n        this.assetViewModeFormViewStatus = view;\r\n    }\r\n\r\n\r\n    constructor(private excelService: ExcelService, private pdfService: PdfService) {\r\n\r\n    }\r\n\r\n    // When click on update/view, ID will pass to respective updata view\r\n    GettingId(id) {\r\n        this.selectedId = id;\r\n        setTimeout(() => {\r\n            this.selectedId = null;\r\n        }, 1000)\r\n    }\r\n    GettingString(name) {\r\n        this.name = name;\r\n        setTimeout(() => {\r\n            this.name = null;\r\n        }, 2000)\r\n    }\r\n    setId(id) {\r\n        this.id = id;\r\n    }\r\n    gettingName(name) {\r\n        this.parentName = name;\r\n    }\r\n    // Store json valu to global level for show click to edit view\r\n    setOrganizationDetail(pageName, objectDetail) {\r\n        this.pageName = pageName;\r\n        this.listOfRow = objectDetail;\r\n        // setTimeout(() => {\r\n        //     this.listOfRow = null;\r\n        // }, 1000)\r\n    }\r\n    setMenuDetail(menu: any) {\r\n        this.listOfRow = menu;\r\n    }\r\n\r\n    analogAsset(objectDetail) {\r\n        this.analogAssetObj = objectDetail;\r\n    }\r\n\r\n    // User view to global level for show click to edit view tab level passing\r\n\r\n    //=========================================( URL, Boject, tab,  Header\r\n    listOfRowDetailForUser(url, objectDetail, tab, header) {\r\n        this.userDetails = objectDetail;\r\n        this.pageName = header;\r\n        this.urlName = url;\r\n        this.tabClick = tab;\r\n    }\r\n\r\n    // clearInfo\r\n    clearInfo() {\r\n        this.userDetails = null;\r\n        this.pageName = null;\r\n        this.tabClick = null;\r\n        this.urlName = null;\r\n        this.selectedId = null;\r\n        this.listOfRow = null;\r\n        sessionStorage.setItem('clickedRowDetail', null);\r\n        // this.pageName = null;\r\n        $('ul li').removeClass('active');\r\n        this.assetViewModeFormViewStatus = 'assetViewMode';\r\n    }\r\n\r\n    getNamePattern() {\r\n        return \"^[a-zA-Z][ a-zA-Z0-9.#@*&_-]*\";\r\n    }\r\n    getNamePatternForGatewayandAsset() {\r\n        return \"[ a-zA-Z0-9.#@*:&_-]*\";\r\n    }\r\n    setIsAdmin(isAdmin: boolean) {\r\n        this.isadmin = isAdmin;\r\n    }\r\n    doubleHyphen(event: any) {\r\n        var str = event.target.value;\r\n        var n = str.includes(\"--\");\r\n        if (n) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    //Response code\r\n    responseStatus = 800;\r\n\r\n\r\n    // Error alert message type key value\r\n    // Modal window for failed scenario(ex: Not saved)\r\n    messageType_Fail = 'Failed'; //(!) with red\r\n    // Information\r\n    messageType_Info = 'Info';\r\n    // Modal window for Warning info (ex: Cancel/Reset/Tab navigation)\r\n    messageType_Warning = 'Warning';  // (!) with orange\r\n    // Modal window for delete\r\n    messageType_Error = 'Error'; // (Cross) with Red\r\n\r\n    // Modal Window foralarm message format\r\n    messageType_AlarmMessage = 'AlarmMessage';\r\n\r\n    // Modal Window for clear message format\r\n    messageType_ClearMessage = 'ClearMessage';\r\n\r\n    // Landing menu\r\n\r\n    landingMenuUrl(landingMenuUrl) {\r\n        this.landingMenuUrlForHome = landingMenuUrl;\r\n    }\r\n    setNumberOfUsers(numberOfUsers: any) {\r\n        this.maxUser = numberOfUsers;\r\n        setTimeout(() => {\r\n            this.maxUser = null;\r\n        }, 2000)\r\n    }\r\n    setRoleList(confirmedList: any[]) {\r\n        this.roleList = confirmedList;\r\n    }\r\n    setAssetDetail(details) {\r\n        this.assetDetails = details;\r\n        setTimeout(() => {\r\n            this.assetDetails = null;\r\n        }, 1000)\r\n    }\r\n\r\n    setGlobalId(id: any) {\r\n        this.globalId = id;\r\n    }\r\n\r\n    setNotificationMedia(objectDetail) {\r\n        this.notificationMediaList = objectDetail;\r\n    }\r\n    setConfirmedNotificationGroupList(objectDetail) {\r\n        this.confirmedNotificationGroupList = objectDetail;\r\n    }\r\n    setConfirmedAccessGroupList(objectDetail) {\r\n        this.confirmedAccessGroupList = objectDetail;\r\n    }\r\n    setUsersList(objectDetail) {\r\n        this.usersList = objectDetail;\r\n    }\r\n    setNotificationGroupDetails(objectDetail) {\r\n        this.notificationGroupDetails = objectDetail;\r\n    }\r\n    setNotificationMediaTabDetails(objectDetail) {\r\n        this.notificationMediaTabDetails = objectDetail;\r\n        setTimeout(() => {\r\n            this.notificationMediaTabDetails = null;\r\n        }, 2000)\r\n    }\r\n\r\n    setNotificationGroupmediaDetails(objectDetail) {\r\n        this.notificationGroupmediaDetails = objectDetail;\r\n    }\r\n    setBackId(object) {\r\n        this.backId = object;\r\n    }\r\n\r\n    // datasource\r\n    dataSource(dataSource) {\r\n        this.dataDataSource = dataSource;\r\n    }\r\n    setNotificationDetail(obj) {\r\n        this.onpageloadNotificationGroupMediaDetails = obj;\r\n    }\r\n\r\n\r\n    // To get the Selected Dahboard name\r\n    selectedDashboardName = [];\r\n    getDashboardSelectedName(userDashboardList, id) {\r\n        let selectedDashboardIdName = '';\r\n\r\n        this.selectedDashboardName = userDashboardList.filter((item) => {\r\n            if (id == null) {\r\n                return item.isDefault == true;\r\n            } else {\r\n                return item.id == parseInt(id);\r\n            }\r\n        });\r\n\r\n        if (this.selectedDashboardName.length) {\r\n            selectedDashboardIdName = this.selectedDashboardName[0].name;\r\n        } else selectedDashboardIdName = 'Dashboard';\r\n\r\n        return selectedDashboardIdName;\r\n    }\r\n\r\n\r\n    getPatternForCommunication(dataType): any {\r\n        switch (dataType) {\r\n            case 'String': {\r\n                return \"\";\r\n            }\r\n            case 'Integer': {\r\n                return \"[0-9]*\";\r\n            }\r\n            case 'Long': {\r\n                return \"[0-9]*\";\r\n            }\r\n            case 'Double': {\r\n                return /^[0-9]\\d{0,5}(\\.\\d{1,4})?%?$/\r\n            }\r\n            case 'Float': {\r\n                return /^[0-9]\\d{0,5}(\\.\\d{1,4})?%?$/\r\n            }\r\n            default: {\r\n                // return \"^[a-zA-Z][ a-zA-Z0-9.#@*&_-]*\";\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n    }\r\n    getPatternForDiscreterTag(dataType): any {\r\n        switch (dataType) {\r\n            case 'String': {\r\n                return \"\";\r\n            }\r\n            case 'Integer': {\r\n                return \"[0-9][0-9,]*\";\r\n            }\r\n            case 'Long': {\r\n                return \"[0-9][0-9,]*\";\r\n            }\r\n            case 'Double': {\r\n                return /^[0-9]\\d{0,5}(\\.\\d{1,4})?%?$/\r\n            }\r\n            case 'Float': {\r\n                return /^[0-9]\\d{0,5}(\\.\\d{1,4})?%?$/\r\n            }\r\n            default: {\r\n                // return \"^[a-zA-Z][ a-zA-Z0-9.#@*&_-]*\";\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n    }\r\n    setLanguageURL(pageUrl) {\r\n        // Getting the host name, Pathname, Current page URL\r\n        let protocol = window.location.protocol\r\n        let hostName = window.location.host;\r\n        var pathName = protocol + \"//\" + hostName + '/empyreal-universe/';\r\n        var currentPageUrl;\r\n        if (pageUrl != null) {\r\n            currentPageUrl = pageUrl;\r\n        } else {\r\n            currentPageUrl = this.getCurrentUrl();\r\n        }\r\n        $('.navbar-nav.navbar-right li.dropdown a#header_language + ul > li a').each(function () {\r\n            $(this).attr('href', '');\r\n            let anchorTagAttrbute = $(this).attr('name');\r\n            let path = pathName + anchorTagAttrbute + \"/#\" + currentPageUrl;\r\n            $(this).attr('href', path);\r\n        });\r\n    }\r\n\r\n\r\n    getCurrentUrl() {\r\n        let pageName = document.location.href.split(\"#\")[1];\r\n        return pageName;\r\n    }\r\n\r\n    setReminingUsers(reminingUsers: number) {\r\n        this.reminingUser = reminingUsers;\r\n        setTimeout(() => {\r\n            this.reminingUser = null;\r\n        }, 2000)\r\n    }\r\n    setMaxUsers(maxUsers: number) {\r\n        this.maxUsers = maxUsers;\r\n        setTimeout(() => {\r\n            this.maxUsers = null;\r\n        }, 2000)\r\n    }\r\n    setDataServerTime(dataServerTime) {\r\n        this.dataServerTime = dataServerTime;\r\n        setTimeout(() => {\r\n            this.maxUsers = null;\r\n        }, 2000)\r\n    }\r\n\r\n\r\n    // Download as a CSV/PDF/Excel file name\r\n    fileName: string;\r\n    getExportingFileName(exportingfileName) {\r\n        let timeSpan = new Date().toISOString();\r\n        let getFullDay = timeSpan.split('T');\r\n        let getTime = getFullDay[1].split(':');\r\n        let getHrMin = getTime[0] + \"H\" + getTime[1] + \"m\";\r\n        this.fileName = `${exportingfileName}_${getFullDay[0]}_${getHrMin}`;\r\n        return this.fileName;\r\n    }\r\n\r\n    // Date and Time split for search criteria\r\n    startDateEndDateTimeSplit(dateTime) {\r\n        let getFullDay = dateTime.split('T');\r\n        let getTime = getFullDay[1].split(':');\r\n        let getHrMin = getTime[0] + \":\" + getTime[1];\r\n        return getFullDay[0] + \" \" + getHrMin;\r\n    }\r\n\r\n    // Make new set of re-arrange object\r\n    reCreateNewObject(data, displayedColumns) {\r\n        let sendBack = data.map(object => {\r\n            var newObject = {};\r\n            for (const objPropertyName of displayedColumns) {\r\n                if (!object.hasOwnProperty(objPropertyName)) {\r\n                    newObject[objPropertyName] = '-';\r\n                } else {\r\n                    newObject[objPropertyName] = object[objPropertyName] ? object[objPropertyName] : '-';\r\n                }\r\n            }\r\n            return newObject;\r\n        });\r\n        return sendBack;\r\n    }\r\n\r\n\r\n\r\n    // Download CSV/PDF/Excel Title formate\r\n    formateCSVTitle(titleList, headerName) {\r\n        let headerTitle = headerName;\r\n        let breakSentence = '\\r\\n';\r\n        let titleRowKeys = '';\r\n        let titleRowValues = '';\r\n        let titleKeysValues;\r\n\r\n        // Getting saperate Title Keys and Values\r\n        for (const [key, value] of Object.entries(titleList)) {\r\n            /* Row by Row */\r\n            titleRowKeys += '\"' + key + '\"' + ',' + '\"' + value + '\"' + ',' + breakSentence;\r\n        }\r\n\r\n        //   Remove at last character (,)\r\n        /* Row by Row */\r\n        titleKeysValues = titleRowKeys.slice(0, -1);\r\n\r\n        return headerTitle + breakSentence + breakSentence + titleKeysValues;\r\n\r\n    }\r\n\r\n    // Final download files\r\n    downloadFile(fileType, exportFile, searchFieldsContainer, tableBodyDataList, fileName, csvOptions) {\r\n        if (fileType == 'pdf') {\r\n            // PDF Export format \r\n            this.pdfService.generatePDF(exportFile, searchFieldsContainer);\r\n        } else if (fileType == 'excel') {\r\n            // Excel export format\r\n            this.excelService.generateExcel(exportFile, searchFieldsContainer);\r\n        } else if (fileType == 'csv') {\r\n            // Export CSV format\r\n            new AngularCsv(tableBodyDataList, fileName, csvOptions);\r\n        }\r\n    }\r\n\r\n\r\n    // Remove last element in the array\r\n    removeLastIndexAtArray(object) {\r\n        // Convert Obaject into Array\r\n        let array = Object.values(object);\r\n        array.pop();\r\n        return array;\r\n    }\r\n\r\n    // Added S.No. to Download file excel,CSV, PDF\r\n    serialNumberGenerate(array) {\r\n        let i = 1;\r\n        let returnModifiedArray = array.map((object) => {\r\n            object.id = i;\r\n            i++;\r\n            return object;\r\n        });\r\n        return returnModifiedArray;\r\n    }\r\n\r\n    setUserEmailId(emailId: string) {\r\n        this.emailId = emailId;\r\n    }\r\n\r\n\r\n    //   Selected Language\r\n    public selectedLanguage: string;\r\n\r\n    // Return the Selected languge for Syncfusion Dropdown \r\n    getLanguage() {\r\n        return this.selectedLanguage;\r\n    }\r\n\r\n    // Set Language\r\n    setLanguage(language) {\r\n        this.selectedLanguage = language;\r\n    }\r\n\r\n    setMultiselectDropdownTextSettings() {\r\n        return this.dropDownTextSettings = {\r\n            text: $localize`:@@multiSelectDropdown.select:--Select--`,\r\n            noDataLabel: $localize`:@@multiSelectDropdown.noDataLabel:No Data Available`\r\n        };\r\n\r\n    }\r\n\r\n    setGatewayLableName(path) {\r\n        let gatewayAndTemplateLableName;\r\n        if (path[1] == \"asset-template\") {\r\n            return gatewayAndTemplateLableName = \"Gateway Template\";\r\n        }\r\n        else if (path[1] == \"asset\") {\r\n            return gatewayAndTemplateLableName = \"Gateway\";\r\n        }\r\n    }\r\n\r\n\r\n    setData:any[] = [];\r\n    setDataValue(data){\r\n        this.setData = data;\r\n    }\r\n\r\n    getDataValue(){\r\n        return this.setData;\r\n    }\r\n}","import { CanDeactivate } from '@angular/router';\r\nimport { Injectable} from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nexport interface ComponentCanDeactivate {\r\n  canDeactivate: () => boolean | Observable<boolean>;\r\n}\r\n\r\n@Injectable()\r\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\r\n\r\n  canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\r\n    // if there are no pending changes, just allow deactivation; else confirm first\r\n    return component.canDeactivate ? component.canDeactivate() : true;\r\n      // NOTE: this warning message will only be shown when navigating elsewhere within your angular app;\r\n      // when navigating away from your angular app, the browser will show a generic warning message\r\n      // see http://stackoverflow.com/a/42207299/7307355\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShareddataService {\r\n\r\n  constructor() { }\r\n\r\n  private messageSource = new Subject<boolean>();\r\n  private subject = new Subject();\r\n  // currentMessage = this.messageSource.asObservable();\r\n  private categorySubject = new Subject();\r\n\r\n  private rackAssetSubject = new Subject();\r\n\r\n  changeMessage(message: boolean) {\r\n    this.messageSource.next(message)\r\n  }\r\n\r\n  getChangedMessage():Observable<boolean>{\r\n    return this.messageSource.asObservable();\r\n  }\r\n\r\n  setData(data: any){\r\n    this.subject.next(data);\r\n  }\r\n\r\n  getData(){\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  setCategory(data: any){\r\n    this.categorySubject.next(data);\r\n  }\r\n\r\n  getCategory(){\r\n    return this.categorySubject.asObservable();\r\n  }\r\n\r\n  setRackAsset(data){\r\n    this.rackAssetSubject.next(data);\r\n  }\r\n\r\n  getRackAsset(){\r\n    return this.rackAssetSubject.asObservable();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeChangeService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getThemeNames(): Observable<[]> {\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport 'rxjs/add/operator/first';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class VersionCheckService {\r\n    // this will be replaced by actual hash post-build.js\r\n    private currentHash = '{{POST_BUILD_ENTERS_HASH_HERE}}';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    /**\r\n     * Checks in every set frequency the version of frontend application\r\n     * @param url\r\n     * @param {number} frequency - in milliseconds, defaults to 30 minutes\r\n     */\r\n    public initVersionCheck(url, frequency = 3000 ) {\r\n        setInterval(() => {\r\n            this.checkVersion(url);\r\n        }, frequency);\r\n    }\r\n\r\n    /**\r\n     * Will do the call and check if the hash has changed or not\r\n     * @param url\r\n     */\r\n    private checkVersion(url) {\r\n        // timestamp these requests to invalidate caches\r\n        // this.http.get(url + '?t=' + new Date().getTime())\r\n        this.http.get(url)\r\n            // .first()\r\n            .subscribe(\r\n                (response: any) => {\r\n                    const hash = response.hash;\r\n                    const hashChanged = this.hasHashChanged(this.currentHash, hash);\r\n\r\n                    // If new version, do something\r\n                    if (hashChanged) {\r\n                        // ENTER YOUR CODE TO DO SOMETHING UPON VERSION CHANGE\r\n                        // for an example: \r\n                        location.reload();\r\n                    }\r\n                    // store the new hash so we wouldn't trigger versionChange again\r\n                    // only necessary in case you did not force refresh\r\n                    this.currentHash = hash;\r\n                },\r\n                (err) => {\r\n                    console.error(err, 'Could not get version');\r\n                }\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Checks if hash has changed.\r\n     * This file has the JS hash, if it is a different one than in the version.json\r\n     * we are dealing with version change\r\n     * @param currentHash\r\n     * @param newHash\r\n     * @returns {boolean}\r\n     */\r\n    private hasHashChanged(currentHash, newHash) {\r\n        if (!currentHash || currentHash === '{{POST_BUILD_ENTERS_HASH_HERE}}') {\r\n            return false;\r\n        }\r\n\r\n        return currentHash !== newHash;\r\n    }\r\n}"]}